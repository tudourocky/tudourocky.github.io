<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hugo Simple</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Hugo Simple</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>shaolong.chen@outlook.it (Shaolong Chen)</managingEditor>
    <webMaster>shaolong.chen@outlook.it (Shaolong Chen)</webMaster>
    <copyright>Â© 2024 Allan Su</copyright>
    <lastBuildDate>Sat, 02 Mar 2024 15:58:28 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1A</title>
      <link>http://localhost:1313/1a/</link>
      <pubDate>Sat, 02 Mar 2024 15:58:28 -0500</pubDate><author>shaolong.chen@outlook.it (Shaolong Chen)</author>
      <guid>http://localhost:1313/1a/</guid>
      <description>The 1A experience will be divided into 4 different sections including the transition from highschool to university, courses in 1A, the COOP search, as well as some random lesson that I learned.
The Transition 1A Courses COOP Random Tips </description>
      <content:encoded><![CDATA[<p>The 1A experience will be divided into 4 different sections including the transition from highschool to university, courses in 1A, the COOP search, as well as some random lesson that I learned.</p>
<h2 id="the-transition">The Transition</h2>
<h2 id="1a-courses">1A Courses</h2>
<h2 id="coop">COOP</h2>
<h2 id="random-tips">Random Tips</h2>
]]></content:encoded>
    </item>
    <item>
      <title>Hugo Site Tutorial</title>
      <link>http://localhost:1313/hugo-site-tutorial/</link>
      <pubDate>Tue, 27 Feb 2024 21:22:21 -0500</pubDate><author>shaolong.chen@outlook.it (Shaolong Chen)</author>
      <guid>http://localhost:1313/hugo-site-tutorial/</guid>
      <description>How to create a blog using Hugo and Github Pages Introduction on Hugo and Github Pages What is Github Pages Github Pages is a group of static web pages that are hosted and deployed through Github.
What is Hugo Hugo is a Static Site Generator written in Go to translate Markdown files into HTML files.
Prerequisites Understanding of basic command-line commands Installed Git and Git basics A GitHub account A code editor such as VSCode Install Hugo You will need a package manager to install the required packages.</description>
      <content:encoded><![CDATA[<h2 id="how-to-create-a-blog-using-hugo-and-github-pages">How to create a blog using Hugo and Github Pages</h2>
<h3 id="introduction-on-hugo-and-github-pages">Introduction on Hugo and Github Pages</h3>
<h4 id="what-is-github-pages">What is Github Pages</h4>
<p>Github Pages is a group of static web pages that are hosted and deployed through Github.</p>
<h4 id="what-is-hugo">What is Hugo</h4>
<p>Hugo is a Static Site Generator written in Go to translate Markdown files into HTML files.</p>
<h4 id="prerequisites">Prerequisites</h4>
<ol>
<li>Understanding of basic command-line commands</li>
<li>Installed Git and Git basics</li>
<li>A GitHub account</li>
<li>A code editor such as VSCode</li>
</ol>
<h3 id="install-hugo">Install Hugo</h3>
<ol>
<li>You will need a package manager to install the required packages. A list of options are provided for Windows on the <a href="https://gohugo.io/installation/windows/">Hugo documentations page</a>.</li>
<li>After you&rsquo;ve installed a package manager you can install hugo through command prompt. For example:</li>
</ol>






<pre tabindex="0"><code>scoop install hugo-extended</code></pre>
<ol start="3">
<li>Check if Hugo was installed successfully by running:</li>
</ol>






<pre tabindex="0"><code>hugo version</code></pre>
<h3 id="creating-the-github-pages-repository">Creating the Github Pages Repository</h3>
<ol>
<li>Name the github pages using the following format: &lt;uername.github.io&gt;, <username> is the name of your github account.</li>
<li>Make the repository public.</li>
<li>Create a README file, this will allow main to be set as the default branch which is helpful when we push our hugo blog onto github.</li>
</ol>
<h3 id="clone-the-repo-to-local">Clone the Repo to local</h3>
<ol>
<li>Open the designated folder in cmd.</li>
</ol>






<pre tabindex="0"><code>cd project_name</code></pre>
<ol start="2">
<li>Clone the repo into the project folder. This is usually done using SSH with modern Github.</li>
</ol>






<pre tabindex="0"><code>git clone &lt;repo_url&gt;</code></pre>
<h3 id="using-hugo-to-generate-a-site">Using Hugo to generate a site</h3>
<ol>
<li>cd into the local repository that was just being cloned.</li>
<li>The command to create a new website is <code>hugo new site</code>.</li>
</ol>






<pre tabindex="0"><code>cd &lt;repo_name&gt;
hugo new site &lt;site_name&gt;</code></pre>
<ol start="3">
<li>Once this command finishes exicuting, 7 folders and 1 file will appear in the repository. These folders includes:
<ul>
<li><strong>archetypes</strong>: contains the font matter template of the hugo site.</li>
<li><strong>content</strong>: contains all the blog content.</li>
<li><strong>layouts</strong>: layouts that overwrites the default template.</li>
<li><strong>static</strong>: contains all static files such as images.</li>
<li><strong>data</strong>: contains other data the Hugo uses when generating the site.</li>
<li><strong>public:</strong>: contains the static websites generated by Hugo.</li>
<li><strong>themes</strong>: contains theme files.</li>
<li><strong>config.toml</strong>: configuration file for the site.</li>
</ul>
</li>
</ol>
<h3 id="installing-a-hugo-theme">Installing a Hugo theme</h3>
<ol>
<li>Find a theme that you like from the <a href="https://themes.gohugo.io/">Hugo Community</a> and follow the installation guide provied in the theme.</li>
<li>Usually the theme comes with an <code>exampleSite</code>. You can use them by copying and pasting everything in the folder to the main directory.</li>
<li>In the config.toml file, replace <strong>baseURL</strong> with the url that you are using the deploy the site on. In our case it would be <code>https://username.github.io/</code>.</li>
<li>In the same file, replace <strong>themes</strong> with the theme that you just installed.</li>
</ol>
<h3 id="creating-a-blog-file-using-hugo">Creating a blog file using Hugo</h3>
<p>The command to create a file is:</p>






<pre tabindex="0"><code>hugo new xxx.md</code></pre>
<p>The files creating using this command will use the font matter template contained in the <code>archetypes</code> folder. You can start writting your very first blog in the empty space below the header using Markdown.</p>
<h3 id="local-testing-and-reviewing">Local testing and reviewing</h3>
<ol>
<li>We can previous the website using the command <code>hugo server</code>.</li>
<li>This command can also be used while we are editing our local Markdown file to previous the site in real time.</li>
<li>The site can be previewed at local host port 1313 by default.</li>
</ol>
<h3 id="publishing-the-website">Publishing the website</h3>
<p>Hugo saves all the static web files in the public folder. Hence all we need in the Github repository is the public folder.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
