<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hugo Simple</title>
    <link>https://tudourocky.github.io/</link>
    <description>Recent content on Hugo Simple</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>shaolong.chen@outlook.it (Shaolong Chen)</managingEditor>
    <webMaster>shaolong.chen@outlook.it (Shaolong Chen)</webMaster>
    <copyright>Â© 2024 Allan Su</copyright>
    <lastBuildDate>Sat, 02 Mar 2024 15:58:28 -0500</lastBuildDate>
    <atom:link href="https://tudourocky.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1A</title>
      <link>https://tudourocky.github.io/1a/</link>
      <pubDate>Sat, 02 Mar 2024 15:58:28 -0500</pubDate><author>shaolong.chen@outlook.it (Shaolong Chen)</author>
      <guid>https://tudourocky.github.io/1a/</guid>
      <description>The 1A experience will be divided into 4 different sections including the transition from highschool to university, courses in 1A, the COOP search, as well as some random lesson that I learned.
The Transition Transitioning into university is really difficult. We now all of the sudden have to do our own laundry, make our own food, and manage our time all by ourselves. This is a completely new experience and is an exciting thing.</description>
      <content:encoded><![CDATA[<p>The 1A experience will be divided into 4 different sections including the transition from highschool to university, courses in 1A, the COOP search, as well as some random lesson that I learned.</p>
<h2 id="the-transition">The Transition</h2>
<p>Transitioning into university is really difficult. We now all of the sudden have to do our own laundry, make our own food, and manage our time all by ourselves. This is a completely new experience and is an exciting thing. However, you will soon find that things start to pile up and your day now goes in a blink of an eye.</p>
<p>And for me, after the first 2 weeks, I started to feel homesick and wanted to leave Waterloo and go home.</p>
<p>So the only thing I would suggest is to put yourself out there and try to make lots of friends. This will greatly take away the emptiness and make the transition a lot easier.</p>
<h2 id="1a-courses">1A Courses</h2>
<h4 id="engl-192">ENGL 192</h4>
<p>Name of the course: Communication in the Engineering Profession<br>
Rating: 3/5</p>
<p>I think most engineering students picked engineering as their university major hoping that they will now be able to only worry about STEM related things and never touch English ever again for the rest of their lives.</p>
<p>WELL GUESS WHAT :DDDD</p>
<p>Welcome to ENGL 192!!!</p>
<p>This course focuses on how to effectively communicate in the world of engineering. It is also the only course that is taught in smaller class sizes ranging from 20-25 students for each section. The way the course is delivered varies based on the professor but is usually consisted of writing a research paper, a panel presentation on the paper, and some weekly written journals that reflects your learning throughout the course.</p>
<p>I think the course itself is useful and interesting and they do teach a few important concepts including IEEE format, how to communicate in a diverse work place, how to read and find published essays, and etc. However, one of the reasons why I disliked the course was the overall atmosphere of the class. My fellow classmates seem to think that this course is completely useless and a waste of time. Hence, they would be doing anything but actively participating in the class and they never tried to engage in group discussions. This really took away from the class and made the course a lot less fun and engaging.</p>
<h4 id="ece-105">ECE 105</h4>
<p>Name of the course: Classical Mechanics
Rating: 4/5</p>
<p>This course is probably one of the hardest course in the term but is definitely doable. The first half of the course is mostly just highschool review with more complex questions and the use of variables instead of numbers in calculations. The latter half starts to discuss topics that are not taught in highschool such as angular motion, simple harmonic motion, polleys, and more.</p>
<p>Although I did horrible in the course, I still think that it is very doable and if you do the work, you could easily score above 80%. All that&rsquo;s needed is to do lots of practice problems and try to understand the concepts as soon as they are being taught in class.</p>
<h4 id="ece-150">ECE 150</h4>
<p>Name of the course: Fundamentals of Programming
Rating: 4/5</p>
<p>This course teaches the fundamentals of programming in C++. It goes from basic syntax to memory allocation to OOP then to some elementary data structures. The course itself is really staight forward and if you attend all the lectures, you should be able to do decently on the course.</p>
<p>I did this course in Fall 2023 and the final exam was extremly long. The questions themselves were not difficult but there were way too many questions. Other than that the course was pretty easy.</p>
<h4 id="ece-190">ECE 190</h4>
<p>Name of the course: Engineering Profession and Practice
Rating: 4/5</p>
<p>This basically talks about what computer engineering is and teaches some basic engineering concepts. The course load here is really light and is basically a free course for people to take a break from the other things that are happening in life.</p>
<h4 id="math-115">MATH 115</h4>
<p>Name of the course: Linear Algebra for Engineering
Rating: 3/5</p>
<p>The prof was really fun and taught the course really well. However I personally found it really difficult to actually understand what was happening and I feel that I only learned the steps to do the questions in the exam and learned nothing about linear algebra and how it works under the hood.</p>
<p>I also overslept and was late to the exam by 30 minutes. (Pro tip don&rsquo;t be late to exam)</p>
<h4 id="math-117">MATH 117</h4>
<p>Name of the course: Calculus 1 for Engineering
Rating: 2/5</p>
<p>Our prof tired her best but still did not do a good job on the teaching part. However, the material is basically all of AP Calc AB so if you did that in highschool, you should find this course relatively easy.</p>
<h4 id="ece-198">ECE 198</h4>
<p>Name of the course: Project Studio
Rating: 3/5</p>
<p>This course was not ok, students are expected to create something using a STM32 board with almost 0 help from the instructor. According to the professors they are trying to minmic what its like to be an engineering in the real world. OK FINE. However, they also said too bad to the fact that TAs are marking differenly and their expectations varies by a huge amount and said that some people get customers that are harder to deal with where as the others get customers that are more easy going.</p>
<p>The good thing is that this allows you to build a solid connection with your partner as you will be malding together all the time and staying up late to try to get the sensors to connect and the code to work on STM32.</p>
<h2 id="coop">COOP</h2>
<p><strong>If you have the chance, CHOOSE STREAM 8 INSTEAD OF STREAM 4</strong></p>
<p>I am a stream 4 engineer and I did not like finding COOP in 1A. You are basically trying to find jobs as a highschool grad and is all of a sudden competing with all the cracked fellow classmates and upper years that already have a tone of experience.</p>
<p>And the job searching process tends to take a lot of energy from you. I tend to find it really hard to focuse on studying when you kept on thinking about coop on the back of your mind. And when I eventually got an interview, my attention would instantly shift torwards that and will no longer be able to focus on my school work.</p>
<p>With that being said, the only good thing about Stream 4 is that we get to not have our back to back study term in first year. We can take this time to recover from 1A and take a break from studying.</p>
<h2 id="random-tips">Random Tips</h2>
<p>CMH has free laundry machines LOL</p>
]]></content:encoded>
    </item>
    <item>
      <title>Hugo Site Tutorial</title>
      <link>https://tudourocky.github.io/hugo-site-tutorial/</link>
      <pubDate>Tue, 27 Feb 2024 21:22:21 -0500</pubDate><author>shaolong.chen@outlook.it (Shaolong Chen)</author>
      <guid>https://tudourocky.github.io/hugo-site-tutorial/</guid>
      <description>How to create a blog using Hugo and Github Pages Introduction on Hugo and Github Pages What is Github Pages Github Pages is a group of static web pages that are hosted and deployed through Github.
What is Hugo Hugo is a Static Site Generator written in Go to translate Markdown files into HTML files.
Prerequisites Understanding of basic command-line commands Installed Git and Git basics A GitHub account A code editor such as VSCode Install Hugo You will need a package manager to install the required packages.</description>
      <content:encoded><![CDATA[<h2 id="how-to-create-a-blog-using-hugo-and-github-pages">How to create a blog using Hugo and Github Pages</h2>
<h3 id="introduction-on-hugo-and-github-pages">Introduction on Hugo and Github Pages</h3>
<h4 id="what-is-github-pages">What is Github Pages</h4>
<p>Github Pages is a group of static web pages that are hosted and deployed through Github.</p>
<h4 id="what-is-hugo">What is Hugo</h4>
<p>Hugo is a Static Site Generator written in Go to translate Markdown files into HTML files.</p>
<h4 id="prerequisites">Prerequisites</h4>
<ol>
<li>Understanding of basic command-line commands</li>
<li>Installed Git and Git basics</li>
<li>A GitHub account</li>
<li>A code editor such as VSCode</li>
</ol>
<h3 id="install-hugo">Install Hugo</h3>
<ol>
<li>You will need a package manager to install the required packages. A list of options are provided for Windows on the <a href="https://gohugo.io/installation/windows/">Hugo documentations page</a>.</li>
<li>After you&rsquo;ve installed a package manager you can install hugo through command prompt. For example:</li>
</ol>






<pre tabindex="0"><code>scoop install hugo-extended</code></pre>
<ol start="3">
<li>Check if Hugo was installed successfully by running:</li>
</ol>






<pre tabindex="0"><code>hugo version</code></pre>
<h3 id="creating-the-github-pages-repository">Creating the Github Pages Repository</h3>
<ol>
<li>Name the github pages using the following format: &lt;uername.github.io&gt;, <username> is the name of your github account.</li>
<li>Make the repository public.</li>
<li>Create a README file, this will allow main to be set as the default branch which is helpful when we push our hugo blog onto github.</li>
</ol>
<h3 id="clone-the-repo-to-local">Clone the Repo to local</h3>
<ol>
<li>Open the designated folder in cmd.</li>
</ol>






<pre tabindex="0"><code>cd project_name</code></pre>
<ol start="2">
<li>Clone the repo into the project folder. This is usually done using SSH with modern Github.</li>
</ol>






<pre tabindex="0"><code>git clone &lt;repo_url&gt;</code></pre>
<h3 id="using-hugo-to-generate-a-site">Using Hugo to generate a site</h3>
<ol>
<li>cd into the local repository that was just being cloned.</li>
<li>The command to create a new website is <code>hugo new site</code>.</li>
</ol>






<pre tabindex="0"><code>cd &lt;repo_name&gt;
hugo new site &lt;site_name&gt;</code></pre>
<ol start="3">
<li>Once this command finishes exicuting, 7 folders and 1 file will appear in the repository. These folders includes:
<ul>
<li><strong>archetypes</strong>: contains the font matter template of the hugo site.</li>
<li><strong>content</strong>: contains all the blog content.</li>
<li><strong>layouts</strong>: layouts that overwrites the default template.</li>
<li><strong>static</strong>: contains all static files such as images.</li>
<li><strong>data</strong>: contains other data the Hugo uses when generating the site.</li>
<li><strong>public:</strong>: contains the static websites generated by Hugo.</li>
<li><strong>themes</strong>: contains theme files.</li>
<li><strong>config.toml</strong>: configuration file for the site.</li>
</ul>
</li>
</ol>
<h3 id="installing-a-hugo-theme">Installing a Hugo theme</h3>
<ol>
<li>Find a theme that you like from the <a href="https://themes.gohugo.io/">Hugo Community</a> and follow the installation guide provied in the theme.</li>
<li>Usually the theme comes with an <code>exampleSite</code>. You can use them by copying and pasting everything in the folder to the main directory.</li>
<li>In the config.toml file, replace <strong>baseURL</strong> with the url that you are using the deploy the site on. In our case it would be <code>https://username.github.io/</code>.</li>
<li>In the same file, replace <strong>themes</strong> with the theme that you just installed.</li>
</ol>
<h3 id="creating-a-blog-file-using-hugo">Creating a blog file using Hugo</h3>
<p>The command to create a file is:</p>






<pre tabindex="0"><code>hugo new xxx.md</code></pre>
<p>The files creating using this command will use the font matter template contained in the <code>archetypes</code> folder. You can start writting your very first blog in the empty space below the header using Markdown.</p>
<h3 id="local-testing-and-reviewing">Local testing and reviewing</h3>
<ol>
<li>We can previous the website using the command <code>hugo server</code>.</li>
<li>This command can also be used while we are editing our local Markdown file to previous the site in real time.</li>
<li>The site can be previewed at local host port 1313 by default.</li>
</ol>
<h3 id="publishing-the-website">Publishing the website</h3>
<p>Hugo saves all the static web files in the public folder. Hence all we need in the Github repository is the public folder.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
